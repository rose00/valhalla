/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

/*
 * @test
 * @compile TestClassFileParser2.java
 * @run main/othervm TestClassFileParser
 */
class TestClassFileParser {
  0xCAFEBABE;

  0; // minor version
  60; // version // JVM_CLASSFILE_MAJOR_VERSION

  [] { // Constant Pool
    ; // first element is empty
    Method #2 #3; // #1
    class #4; // #2
    NameAndType #5 #6; // #3
    Utf8 "java/lang/Object"; // #4
    Utf8 "<init>"; // #5
    Utf8 "()V"; // #6
    class #8; // #7
    Utf8 "TestClassFileParser"; // #8
    Utf8 "Code"; // #9
    Utf8 "LineNumberTable"; // #10
    Utf8 "main"; // #11
    Utf8 "([Ljava/lang/String;)V"; // #12

    Utf8 "Parametric"; // #13

    { 21b /* C_Parameter */;
      1b  /* JVM_PARAM_Class */;
      #0  /* bsm_index */;
    }; // #14

    { 22b /* C_Linkage */;
      #14  /* constant_index */; // is_loadable_constant(): ((_tag >= JVM_CONSTANT_Integer && _tag <= JVM_CONSTANT_String) ||
                                 //                          is_method_type() || is_method_handle() || is_dynamic_constant() ||
                                 //                          is_variant_parameter() || is_unresolved_klass());
      #1  /* ref_index */;       // can_have_variant_linkage(): is_method() || is_interface_method()
    }; // #15

    Utf8 "BootstrapMethods"; // #16
    MethodHandle 7b #18; // #17

    Method #19 #20; // #18
    class #21; // #19
    NameAndType #22 #23; // #20
    Utf8 "java/lang/invoke/ParametricBootstraps"; // #21
    Utf8 "bootstrap"; // #22
    Utf8 "([Ljava/lang/Object;)Ljava/lang/Object;"; // #23

    // Duplicate class parameter must be rejected:
    //;{ 21b /* C_Parameter */;
    //  1b  /* JVM_PARAM_Class */;
    //  #0  /* bsm_index */;
    //}; // #24

    // Unused method parameter must be rejected:
    //;{ 21b /* C_Parameter */;
    //  2b  /* JVM_PARAM_MethodOnly */;
    //  #0  /* bsm_index */;
    //}; // #24

    Utf8 "unused #24";
    Utf8 "unused #25";
    Utf8 "unused #26";
    Utf8 "unused #27";
    Utf8 "unused #28";
    Utf8 "unused #29";
    Utf8 "unused #30";

    Method #32 #33; // #31 MethodHandles::lookup
    class #34; // #32 MethodHandles
    NameAndType #35 #36; // #33 lookup()Lookup
    Utf8 "java/lang/invoke/MethodHandles"; // #34
    Utf8 "lookup"; // #35
    Utf8 "()Ljava/lang/invoke/MethodHandles$Lookup;"; // #36
    Method #38 #39; // #37 TestClassFileParser2::main
    class #40; // #38 TestClassFileParser2
    NameAndType #41 #42; // #39 main(String[])void
    Utf8 "TestClassFileParser2"; // #40
    Utf8 "runit"; // #41
    Utf8 "(Ljava/lang/Object;Ljava/lang/Object;)V"; // #42

  } // Constant Pool

  0x0021; // access
  #7;// this_cpx
  #2;// super_cpx

  [] { // Interfaces
  } // Interfaces

  [] { // fields
  } // fields

  [] { // methods
    { // Member
      0x0001; // access
      #5; // name_cpx
      #6; // sig_cpx
      [] { // Attributes
        Attr(#9) { // Code
          1; // max_stack
          1; // max_locals
          Bytes[]{
            0x2AB70001B1;
          }
          [] { // Traps
          } // end Traps
          [] { // Attributes
            Attr(#10) { // LineNumberTable
              [] { // LineNumberTable
                0  1;
              }
            } // end LineNumberTable
          } // Attributes
        }; // end Code
        Attr(#13, 2) { // Parametric
          #14; // #parametric_constant_index, is_variant_parameter()
        } // end Parametric
      } // Attributes
    } // Member
    ;
    { // Member
      0x0009; // public static
      #11; // main
      #12; // (String[])void
      [] { // Attributes
        Attr(#9) { // Code
          2; // max_stack
          1; // max_locals
          Bytes[]{
            0xB8 #31;  //invokestatic MethodHandles::lookup
            0x2A; //aload_0 (String... args)
            0xB8 #37; //invokestatic TestClassFileParser2::main
            0xB1; //return
          }
          [] { // Traps
          } // end Traps
          [] { // Attributes
            Attr(#10) { // LineNumberTable
              [] { // LineNumberTable
                0  3;
              }
            } // end LineNumberTable
          } // Attributes
        } // end Code
      } // Attributes
    } // Member
    ;
  } // methods

  [] { // Attributes
    Attr(#16) {  // BootstrapMethods
      [1] {
        #17 // Method handle
        [0] { // Arguments
        }
      }
    }
    ;
    Attr(#13, 2) { // Parametric
      #14; // #parametric_constant_index, is_variant_parameter()
    } // end Parametric
  } // Attributes
} // end class TestClassFileParser
